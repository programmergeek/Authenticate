{"version":3,"sources":["Components/SignUp/SignUp.tsx","Components/Login/Login.tsx","Components/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SignUp","useForm","register","handleSubmit","errors","formState","className","onSubmit","data","console","log","id","required","maxLength","name","type","username","pattern","message","value","email","minLength","password","to","href","Login","Home","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b464faaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Inputs {\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const SignUp: React.FC = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>();\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit(onSubmit)} id=\"sign-up-form\">\r\n        <span className=\"header\">Sign Up</span>\r\n        <label>Name</label>\r\n        <input {...register(\"name\", { required: true, maxLength: 100 })} />\r\n        {errors.name && errors.name.type === \"required\" && (\r\n          <span className=\"error-message\">This field is required.</span>\r\n        )}\r\n        {errors.name && errors.name.type === \"maxLength\" && (\r\n          <span className=\"error-message\">\r\n            You have exceeded the character limit.\r\n          </span>\r\n        )}\r\n        <label>Username</label>\r\n        <input {...register(\"username\", { required: true, maxLength: 100 })} />\r\n        {errors.username && errors.username.type === \"required\" && (\r\n          <span className=\"error-message\">This field is required.</span>\r\n        )}\r\n        {errors.username && errors.username.type === \"maxLength\" && (\r\n          <span className=\"error-message\">\r\n            You have exceeded the character limit.\r\n          </span>\r\n        )}\r\n        <label>E-mail</label>\r\n        <input\r\n          {...register(\"email\", {\r\n            required: true,\r\n            pattern: {\r\n              message: \"Enter a valid email address\",\r\n              value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\r\n            },\r\n          })}\r\n        />\r\n        {errors.email && errors.email.type === \"required\" && (\r\n          <span className=\"error-message\">This field is required.</span>\r\n        )}\r\n        {errors.email && errors.email.type === \"pattern\" && (\r\n          <span className=\"error-message\">Enter a valid email address.</span>\r\n        )}\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          {...register(\"password\", {\r\n            minLength: {\r\n              value: 8,\r\n              message: \"Password needs to between 8 and 25 characters\",\r\n            },\r\n            maxLength: {\r\n              value: 25,\r\n              message: \"Password needs to between 8 and 25 characters\",\r\n            },\r\n          })}\r\n        />\r\n        {errors.password && errors.password.type === \"required\" && (\r\n          <span className=\"error-message\">This field is required.</span>\r\n        )}\r\n        {errors.password && errors.password.type === \"maxLength\" && (\r\n          <span className=\"error-message\">\r\n            You have exceeded the character limit.\r\n          </span>\r\n        )}\r\n        <button type=\"submit\">Sign Up</button>\r\n        <Link to=\"/login\">\r\n          <a href=\"/login\">Login</a>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Fields {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login: React.FC = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Fields>();\r\n  const onSubmit: SubmitHandler<Fields> = (data) => console.log(data);\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <span className=\"header\">Login</span>\r\n        <label>Username</label>\r\n        <input {...register(\"username\", { required: true, maxLength: 100 })} />\r\n        {errors.username && errors.username.type === \"required\" && (\r\n          <span className=\"error-message\">This field is required.</span>\r\n        )}\r\n        {errors.username && errors.username.type === \"maxLength\" && (\r\n          <span className=\"error-message\">\r\n            You have exceeded the character limit.\r\n          </span>\r\n        )}\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          {...register(\"password\", {\r\n            minLength: {\r\n              value: 8,\r\n              message: \"Password needs to between 8 and 25 characters\",\r\n            },\r\n            maxLength: {\r\n              value: 25,\r\n              message: \"Password needs to between 8 and 25 characters\",\r\n            },\r\n          })}\r\n        />\r\n        {errors.password && errors.password.type === \"required\" && (\r\n          <span className=\"error-message\">This field is required.</span>\r\n        )}\r\n        {errors.password && errors.password.type === \"maxLength\" && (\r\n          <span className=\"error-message\">\r\n            You have exceeded the character limit.\r\n          </span>\r\n        )}\r\n        <button type=\"submit\">Login</button>\r\n        <Link to=\"/signup\">\r\n          <a href=\"/signup\">Create an account</a>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nexport const Home: React.FC = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Link to=\"/signup\">\r\n        <a href=\"/signup\" className=\"primary\">\r\n          Sign Up\r\n        </a>\r\n      </Link>\r\n      <Link to=\"/login\">\r\n        <a href=\"/login\" className=\"secondary\">\r\n          Login\r\n        </a>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Home, Login, SignUp } from \"./Components\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}